// Generated by the code_gen tool.  DO NOT EDIT!
// source file: /home/kevin/SVN/project/mdl/src/resource/mdl_shl1_msg.xml
// time: 2015/07/18 14:14:24

package datayes.mdl.mdl_shl1_pbmsg;
option java_outer_classname = "MDLSHL1Msg";

enum MDLSHL1ServiceVersion {
	MDLVID_MDL_SHL1 = 101; 
};

enum MDLSHL1MessageID {
	MDLMID_MDL_SHL1_Indexes = 3;
	MDLMID_MDL_SHL1_Equity = 4;
	MDLMID_MDL_SHL1_Bonds = 5;
	MDLMID_MDL_SHL1_Funds = 6;
};

message double_3 {
	required int64 Value =  1;
	optional uint32 DecimalShift = 2 [default = 1000];
};

message float_3 {
	required int32 Value =  1;
	optional uint32 DecimalShift = 2 [default = 1000];
};

message double_4 {
	required int64 Value =  1;
	optional uint32 DecimalShift = 2 [default = 10000];
};

message double_2 {
	required int64 Value =  1;
	optional uint32 DecimalShift = 2 [default = 100];
};
 
message Indexes {
	enum MID {
		MessageID = 3;
	};
	enum SID {
		ServiceID = 3;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional string IndexID = 1;
	optional string IndexName = 2;
	optional double_4 PreCloseIndex = 3;
	optional double_4 OpenIndex = 4;
	optional double_2 Turnover = 5;
	optional double_4 HighIndex = 6;
	optional double_4 LowIndex = 7;
	optional double_4 LastIndex = 8;
	optional uint64 TradVolume = 9;
	optional uint32 UpdateTime = 10;
	optional double_4 CloseIndex = 11;
	optional string TradingPhaseCode = 12;
};

message Equity {
	enum MID {
		MessageID = 4;
	};
	enum SID {
		ServiceID = 3;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional string SecurityID = 1;
	optional string SecurityName = 2;
	optional string TradingPhaseCode = 3;
	optional uint32 UpdateTime = 4;
	optional uint64 Volume = 5;
	optional double_2 Turnover = 6;
	optional double_3 PreCloPrice = 7;
	optional double_3 OpenPrice = 8;
	optional double_3 HighPrice = 9;
	optional double_3 LowPrice = 10;
	optional double_3 LastPrice = 11;
	optional double_3 ClosePrice = 12;
	message BidPriceLevelItem {
		optional uint64 Volume = 14;
		optional double_3 Price = 15;
	};
	repeated BidPriceLevelItem BidPriceLevel = 13;
	message AskPriceLevelItem {
		optional uint64 Volume = 17;
		optional double_3 Price = 18;
	};
	repeated AskPriceLevelItem AskPriceLevel = 16;
};

message Bonds {
	enum MID {
		MessageID = 5;
	};
	enum SID {
		ServiceID = 3;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional string SecurityID = 1;
	optional string SecurityName = 2;
	optional string TradingPhaseCode = 3;
	optional uint32 UpdateTime = 4;
	optional uint64 Volume = 5;
	optional double_2 Turnover = 6;
	optional double_3 PreCloPrice = 7;
	optional double_3 OpenPrice = 8;
	optional double_3 HighPrice = 9;
	optional double_3 LowPrice = 10;
	optional double_3 LastPrice = 11;
	optional double_3 ClosePrice = 12;
	message BidPriceLevelItem {
		optional uint64 Volume = 14;
		optional double_3 Price = 15;
	};
	repeated BidPriceLevelItem BidPriceLevel = 13;
	message AskPriceLevelItem {
		optional uint64 Volume = 17;
		optional double_3 Price = 18;
	};
	repeated AskPriceLevelItem AskPriceLevel = 16;
};

message Funds {
	enum MID {
		MessageID = 6;
	};
	enum SID {
		ServiceID = 3;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional string SecurityID = 1;
	optional string SecurityName = 2;
	optional string TradingPhaseCode = 3;
	optional uint32 UpdateTime = 4;
	optional uint64 Volume = 5;
	optional double_2 Turnover = 6;
	optional double_3 PreCloPrice = 7;
	optional double_3 OpenPrice = 8;
	optional double_3 HighPrice = 9;
	optional double_3 LowPrice = 10;
	optional double_3 LastPrice = 11;
	optional double_3 ClosePrice = 12;
	optional double_3 IOPV = 13;
	optional double_3 PreCloseIOPV = 14;
	message BidPriceLevelItem {
		optional uint64 Volume = 16;
		optional double_3 Price = 17;
	};
	repeated BidPriceLevelItem BidPriceLevel = 15;
	message AskPriceLevelItem {
		optional uint64 Volume = 19;
		optional double_3 Price = 20;
	};
	repeated AskPriceLevelItem AskPriceLevel = 18;
};
