// Generated by the code_gen tool.  DO NOT EDIT!
// source file: /home/kevin/SVN/project/mdl/src/resource/mdl_shl2_msg.xml
// time: 2015/07/18 14:14:24

package datayes.mdl.mdl_shl2_pbmsg;
option java_outer_classname = "MDLSHL2Msg";

enum MDLSHL2ServiceVersion {
	MDLVID_MDL_SHL2 = 101; 
};

enum MDLSHL2MessageID {
	MDLMID_MDL_SHL2_SHL1Stock = 2;
	MDLMID_MDL_SHL2_SHL2Transaction = 3;
	MDLMID_MDL_SHL2_SHL2MarketData = 4;
	MDLMID_MDL_SHL2_SHL2VirtualAuctionPrice = 5;
	MDLMID_MDL_SHL2_SHL2Index = 6;
	MDLMID_MDL_SHL2_SHL2MarketOverview = 7;
	MDLMID_MDL_SHL2_SHL2Statics = 8;
	MDLMID_MDL_SHL2_OPTLevel1 = 9;
};

message float_3 {
	required int32 Value =  1;
	optional uint32 DecimalShift = 2 [default = 1000];
};

message double_3 {
	required int64 Value =  1;
	optional uint32 DecimalShift = 2 [default = 1000];
};

message double_5 {
	required int64 Value =  1;
	optional uint32 DecimalShift = 2 [default = 100000];
};

message float_4 {
	required int32 Value =  1;
	optional uint32 DecimalShift = 2 [default = 10000];
};

message double_1 {
	required int64 Value =  1;
	optional uint32 DecimalShift = 2 [default = 10];
};

message double_4 {
	required int64 Value =  1;
	optional uint32 DecimalShift = 2 [default = 10000];
};

message double_2 {
	required int64 Value =  1;
	optional uint32 DecimalShift = 2 [default = 100];
};

message SHL1Stock {
	enum MID {
		MessageID = 2;
	};
	enum SID {
		ServiceID = 4;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional string SecurityID = 1;
	optional string SecurityName = 2;
	optional float_3 PreCloPrice = 3;
	optional float_3 OpenPrice = 4;
	optional int64 Turnover = 5;
	optional float_3 HighPrice = 6;
	optional float_3 LowPrice = 7;
	optional float_3 LastPrice = 8;
	optional uint64 Volume = 9;
	optional float_3 PE = 10;
	optional uint64 BidVolume1 = 11;
	optional float_3 BidPrice1 = 12;
	optional uint64 BidVolume2 = 13;
	optional float_3 BidPrice2 = 14;
	optional uint64 BidVolume3 = 15;
	optional float_3 BidPrice3 = 16;
	optional uint64 BidVolume4 = 17;
	optional float_3 BidPrice4 = 18;
	optional uint64 BidVolume5 = 19;
	optional float_3 BidPrice5 = 20;
	optional uint64 AskVolume1 = 21;
	optional float_3 AskPrice1 = 22;
	optional uint64 AskVolume2 = 23;
	optional float_3 AskPrice2 = 24;
	optional uint64 AskVolume3 = 25;
	optional float_3 AskPrice3 = 26;
	optional uint64 AskVolume4 = 27;
	optional float_3 AskPrice4 = 28;
	optional uint64 AskVolume5 = 29;
	optional float_3 AskPrice5 = 30;
};

message SHL2Transaction {
	enum MID {
		MessageID = 3;
	};
	enum SID {
		ServiceID = 4;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional int32 DataStatus = 1;
	optional int32 TradeIndex = 2;
	optional int32 TradeChan = 3;
	optional string SecurityID = 4;
	optional uint32 TradTime = 5;
	optional float_3 TradPrice = 6;
	optional double_3 TradVolume = 7;
	optional double_5 TradeMoney = 8;
	optional int64 TradeBuyNo = 9;
	optional int64 TradeSellNo = 10;
	optional string TradeBSFlag = 11;
};

message SHL2MarketData {
	enum MID {
		MessageID = 4;
	};
	enum SID {
		ServiceID = 4;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional uint32 UpdateTime = 1;
	optional string SecurityID = 2;
	optional int32 ImageStatus = 3;
	optional float_3 PreCloPrice = 4;
	optional float_3 OpenPrice = 5;
	optional float_3 HighPrice = 6;
	optional float_3 LowPrice = 7;
	optional float_3 LastPrice = 8;
	optional float_3 ClosePrice = 9;
	optional string InstruStatus = 10;
	optional uint32 TradNumber = 11;
	optional double_3 TradVolume = 12;
	optional double_5 Turnover = 13;
	optional double_3 TotalBidVol = 14;
	optional float_3 WAvgBidPri = 15;
	optional float_3 AltWAvgBidPri = 16;
	optional double_3 TotalAskVol = 17;
	optional float_3 WAvgAskPri = 18;
	optional float_3 AltWAvgAskPri = 19;
	optional uint32 EtfBuyNumber = 20;
	optional double_3 EtfBuyVolume = 21;
	optional double_5 EtfBuyMoney = 22;
	optional uint32 EtfSellNumber = 23;
	optional double_3 EtfSellVolume = 24;
	optional double_5 ETFSellMoney = 25;
	optional float_4 YieldToMatu = 26;
	optional double_3 TotWarExNum = 27;
	optional double_3 WarLowerPri = 28;
	optional double_3 WarUpperPri = 29;
	optional uint32 WiDBuyNum = 30;
	optional double_3 WiDBuyVol = 31;
	optional double_5 WiDBuyMon = 32;
	optional uint32 WiDSellNum = 33;
	optional double_3 WiDSellVol = 34;
	optional double_5 WiDSellMon = 35;
	optional uint32 TotBidNum = 36;
	optional uint32 TotSellNum = 37;
	optional uint32 MaxBidDur = 38;
	optional uint32 MaxSellDur = 39;
	optional uint32 BidNum = 40;
	optional uint32 SellNum = 41;
	message BidLevelsItem {
		optional uint32 PriLevOpera = 43;
		optional float_3 OrderPrice = 44;
		optional double_3 OrderVol = 45;
		optional uint32 OrderNum = 46;
		message NOrdersItem {
			optional uint32 OrderQueOper = 48;
			optional uint32 OrderQueID = 49;
			optional double_3 OrderQty = 50;
		};
		repeated NOrdersItem NOrders = 47;
	};
	repeated BidLevelsItem BidLevels = 42;
	message SellLevelsItem {
		optional uint32 PriLevOpera = 52;
		optional float_3 OrderPrice = 53;
		optional double_3 OrderVol = 54;
		optional uint32 OrderNum = 55;
		message NoOrdersItem {
			optional uint32 OrderQueOper = 57;
			optional uint32 OrderQueID = 58;
			optional double_3 OrderQty = 59;
		};
		repeated NoOrdersItem NoOrders = 56;
	};
	repeated SellLevelsItem SellLevels = 51;
	optional float_3 IOPV = 60;
};

message SHL2VirtualAuctionPrice {
	enum MID {
		MessageID = 5;
	};
	enum SID {
		ServiceID = 4;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional uint32 UpdateTime = 1;
	optional uint32 DataStatus = 2;
	optional string SecurityID = 3;
	optional float_3 VirPri = 4;
	optional double_3 VirAucQty = 5;
	optional double_3 LeaQty = 6;
	optional string Side = 7;
};

message SHL2Index {
	enum MID {
		MessageID = 6;
	};
	enum SID {
		ServiceID = 4;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional uint32 UpdateTime = 1;
	optional uint32 DataStatus = 2;
	optional string SecurityID = 3;
	optional double_5 PreCloseIndex = 4;
	optional double_5 OpenIndex = 5;
	optional double_1 Turnover = 6;
	optional double_5 HighIndex = 7;
	optional double_5 LowIndex = 8;
	optional double_5 LastIndex = 9;
	optional uint32 TradTime = 10;
	optional double_5 TradVolume = 11;
	optional double_5 CloseIndex = 12;
};

message SHL2MarketOverview {
	enum MID {
		MessageID = 7;
	};
	enum SID {
		ServiceID = 4;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional uint32 UpdateTime = 1;
	optional uint32 DataStatus = 2;
	optional string SecurityID = 3;
	optional uint32 UpdateMill = 4;
	optional uint32 TradDay = 5;
};

message SHL2Statics {
	enum MID {
		MessageID = 8;
	};
	enum SID {
		ServiceID = 4;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional string SecurityID = 1;
	optional uint32 UpdateTime = 2;
	optional float_3 OpenPrice = 3;
	optional float_3 HighPrice = 4;
	optional float_3 LowPrice = 5;
	optional float_3 ClosePrice = 6;
	optional double_3 TradVolume = 7;
	optional double_5 Turnover = 8;
};

message OPTLevel1 {
	enum MID {
		MessageID = 9;
	};
	enum SID {
		ServiceID = 4;
	};
	enum VID {
		ServiceVersion = 101;
	};
	optional uint32 UpdateTime = 1;
	optional int32 DataStatus = 2;
	optional string SecurityID = 3;
	optional int32 ImageStatus = 4;
	optional double_4 PreSettlPrice = 5;
	optional double_4 SettlPrice = 6;
	optional double_4 OpenPx = 7;
	optional double_4 HighPx = 8;
	optional double_4 LowPx = 9;
	optional double_4 LastPx = 10;
	optional double_4 ClosePx = 11;
	optional double_4 AuctionPrice = 12;
	optional int64 AuctionQty = 13;
	optional int64 TotalLongPosition = 14;
	message BidPriceLevelItem {
		optional int64 BidSize = 16;
		optional double_4 BidPx = 17;
	};
	repeated BidPriceLevelItem BidPriceLevel = 15;
	message OfferPriceLevelItem {
		optional int64 OfferSize = 19;
		optional double_4 OfferPx = 20;
	};
	repeated OfferPriceLevelItem OfferPriceLevel = 18;
	optional int64 TotalVolumeTrade = 21;
	optional double_2 TotalValueTrade = 22;
	optional string TradingPhaseCode = 23;
	optional uint32 OrigTime = 24;
};
