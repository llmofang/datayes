// Generated by the code_gen tool.  DO NOT EDIT!
// source: C:/SVN/project/mdl/src/resource/mdl_bar_msg.xml
// time: 2016/00/11 16:10:46

#pragma once

#include "mdl_api_types.h"

namespace datayes {
namespace mdl {
namespace mdl_bar_msg {

static const uint16_t MDLVID_MDL_BAR = 101;

enum MDL_BARMessageID {
	MDLMID_MDL_BAR_XSHGStockMinuteBar = 1,
	MDLMID_MDL_BAR_XSHEStockMinuteBar = 2,
	MDLMID_MDL_BAR_HKEXStockMinuteBar = 3,
	MDLMID_MDL_BAR_DCEFutureMinuteBar = 4,
	MDLMID_MDL_BAR_SHFEFutureMinuteBar = 5,
	MDLMID_MDL_BAR_CZCEFutureMinuteBar = 6,
	MDLMID_MDL_BAR_CFFEXFutureMinuteBar = 7,
	MDLMID_MDL_BAR_XSHGOptionMinuteBar = 8,
	MDLMID_MDL_BAR_XSHGIndexMinuteBar = 9,
	MDLMID_MDL_BAR_XSHEIndexMinuteBar = 10,
	MDLMID_MDL_BAR_XSHGCapitalFlow = 11,
	MDLMID_MDL_BAR_XSHECapitalFlow = 12,
	MDLMID_MDL_BAR_IndustryCapitalFlow = 13,
	MDLMID_MDL_BAR_XSHGMoneyFlow = 14,
	MDLMID_MDL_BAR_XSHEMoneyFlow = 15,
	MDLMID_MDL_BAR_XSHGStockMultiMinuteBar = 16,
	MDLMID_MDL_BAR_XSHEStockMultiMinuteBar = 17,
	MDLMID_MDL_BAR_HKEXStockMultiMinuteBar = 18,
	MDLMID_MDL_BAR_DCEFutureMultiMinuteBar = 19,
	MDLMID_MDL_BAR_SHFEFutureMultiMinuteBar = 20,
	MDLMID_MDL_BAR_CZCEFutureMultiMinuteBar = 21,
	MDLMID_MDL_BAR_CFFEXFutureMultiMinuteBar = 22,
	MDLMID_MDL_BAR_XSHGOptionMultiMinuteBar = 23,
	MDLMID_MDL_BAR_XSHGIndexMultiMinuteBar = 24,
	MDLMID_MDL_BAR_XSHEIndexMultiMinuteBar = 25,
	MDLMID_MDL_BAR_IndustryMoneyFlow = 26,
	MDLMID_MDL_BAR_HangSengIndexMinuteBar = 27,
	MDLMID_MDL_BAR_HangSengIndexMultiMinuteBar = 28,
	MDLMID_MDL_BAR_DeltaTick = 29
};

#pragma pack(1)

struct XSHGStockMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHGStockMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
};

struct XSHEStockMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHEStockMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
};

struct HKEXStockMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_HKEXStockMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
};

struct DCEFutureMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_DCEFutureMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int64_t OpenInterest;
};

struct SHFEFutureMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_SHFEFutureMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int64_t OpenInterest;
};

struct CZCEFutureMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_CZCEFutureMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int64_t OpenInterest;
};

struct CFFEXFutureMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_CFFEXFutureMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int64_t OpenInterest;
};

struct XSHGOptionMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHGOptionMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int64_t TotalLongPosition;
};

struct XSHGIndexMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHGIndexMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
};

struct XSHEIndexMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHEIndexMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
};

struct XSHGCapitalFlow {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHGCapitalFlow
	};
	MDLAnsiString SecurityID;
	MDLTime TradeTime;
	MDLDoubleT<3> Price;
	int64_t Volume;
	MDLDoubleT<3> Turnover;
	int32_t BSFlag;
	MDLDoubleT<3> CapitalInFlow;
	MDLDoubleT<3> CapitalOutFlow;
	MDLDoubleT<3> NetCapitalInflow;
};

struct XSHECapitalFlow {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHECapitalFlow
	};
	MDLAnsiString SecurityID;
	MDLTime TradeTime;
	MDLDoubleT<3> Price;
	int64_t Volume;
	MDLDoubleT<3> Turnover;
	int32_t BSFlag;
	MDLDoubleT<3> CapitalInFlow;
	MDLDoubleT<3> CapitalOutFlow;
	MDLDoubleT<3> NetCapitalInflow;
};

struct IndustryCapitalFlow {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_IndustryCapitalFlow
	};
	MDLAnsiString SecurityID;
	MDLUTF8String SecurityName;
	MDLTime TradeTime;
	MDLDoubleT<3> CapitalInFlow;
	MDLDoubleT<3> CapitalOutFlow;
	MDLDoubleT<3> NetCapitalInflow;
};

struct XSHGMoneyFlow {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHGMoneyFlow
	};
	MDLAnsiString SecurityID;
	MDLTime TradeTime;
	MDLDoubleT<3> MoneyInFlow;
	int32_t MoneyInFlowType;
	MDLDoubleT<3> MoneyOutFlow;
	int32_t MoneyOutFlowType;
	MDLDoubleT<3> MoneyNetInFlow;
	int32_t MoneyNetInFlowType;
};

struct XSHEMoneyFlow {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHEMoneyFlow
	};
	MDLAnsiString SecurityID;
	MDLTime TradeTime;
	MDLDoubleT<3> MoneyInFlow;
	int32_t MoneyInFlowType;
	MDLDoubleT<3> MoneyOutFlow;
	int32_t MoneyOutFlowType;
	MDLDoubleT<3> MoneyNetInFlow;
	int32_t MoneyNetInFlowType;
};

struct XSHGStockMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHGStockMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int32_t Unit;
};

struct XSHEStockMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHEStockMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int32_t Unit;
};

struct HKEXStockMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_HKEXStockMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int32_t Unit;
};

struct DCEFutureMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_DCEFutureMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int64_t OpenInterest;
	int32_t Unit;
};

struct SHFEFutureMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_SHFEFutureMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int64_t OpenInterest;
	int32_t Unit;
};

struct CZCEFutureMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_CZCEFutureMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int64_t OpenInterest;
	int32_t Unit;
};

struct CFFEXFutureMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_CFFEXFutureMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int64_t OpenInterest;
	int32_t Unit;
};

struct XSHGOptionMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHGOptionMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int64_t TotalLongPosition;
	int32_t Unit;
};

struct XSHGIndexMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHGIndexMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int32_t Unit;
};

struct XSHEIndexMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_XSHEIndexMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	int64_t TotalVolume;
	MDLDoubleT<3> TotalValue;
	int32_t Unit;
};

struct IndustryMoneyFlow {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_IndustryMoneyFlow
	};
	MDLAnsiString SecurityID;
	MDLUTF8String SecurityName;
	MDLAnsiString TypeSymbol;
	MDLTime TradeTime;
	MDLDoubleT<3> InFlow_s;
	MDLDoubleT<3> InFlow_m;
	MDLDoubleT<3> InFlow_l;
	MDLDoubleT<3> InFlow_xl;
	MDLDoubleT<3> OutFlow_s;
	MDLDoubleT<3> OutFlow_m;
	MDLDoubleT<3> OutFlow_l;
	MDLDoubleT<3> OutFlow_xl;
	MDLDoubleT<3> NetInFlow_s;
	MDLDoubleT<3> NetInFlow_m;
	MDLDoubleT<3> NetInFlow_l;
	MDLDoubleT<3> NetInFlow_xl;
};

struct HangSengIndexMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_HangSengIndexMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	MDLDoubleT<3> TotalValue;
};

struct HangSengIndexMultiMinuteBar {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_HangSengIndexMultiMinuteBar
	};
	MDLAnsiString SecurityID;
	MDLTime BarTime;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> ClosePrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	MDLDoubleT<3> TotalValue;
	int32_t Unit;
};

struct DeltaTick {
	enum {
		ServiceID = MDLSID_MDL_BAR,
		ServiceVer = MDLVID_MDL_BAR,
		MessageID = MDLMID_MDL_BAR_DeltaTick
	};
	uint32_t ExchangeCD;
	uint32_t MsgID;
	MDLAnsiString SecurityID;
	MDLTime UpdateTime;
	int64_t DeltaVolume;
	MDLDoubleT<2> LastPrice;
	MDLDoubleT<2> DeltaPrice;
};

#pragma pack()

} // namespace mdl_bar_msg
} // namespace mdl
} // namespace datayes
