// Generated by the code_gen tool.  DO NOT EDIT!
// source: C:/SVN/project/mdl/src/resource/mdl_szl2_msg.xml
// time: 2015/07/04 15:32:56

#pragma once

#include "mdl_api_types.h"

namespace datayes {
namespace mdl {
namespace mdl_szl2_msg {

static const uint16_t MDLVID_MDL_SZL2 = 101;

enum MDL_SZL2MessageID {
	MDLMID_MDL_SZL2_Trade = 1,
	MDLMID_MDL_SZL2_Order = 2,
	MDLMID_MDL_SZL2_Index = 3,
	MDLMID_MDL_SZL2_MarketData = 4,
	MDLMID_MDL_SZL2_StockStatus = 5,
	MDLMID_MDL_SZL2_StockInfo = 6,
	MDLMID_MDL_SZL2_SysParam = 7,
	MDLMID_MDL_SZL2_Snapshot300111 = 8,
	MDLMID_MDL_SZL2_Snapshot309011 = 9,
	MDLMID_MDL_SZL2_Snapshot309111 = 10,
	MDLMID_MDL_SZL2_Snapshot300611 = 11,
	MDLMID_MDL_SZL2_SecurityStatus = 12,
	MDLMID_MDL_SZL2_Order300192 = 13,
	MDLMID_MDL_SZL2_Order300592 = 14,
	MDLMID_MDL_SZL2_Order300792 = 15,
	MDLMID_MDL_SZL2_Transaction300191 = 16,
	MDLMID_MDL_SZL2_Transaction300591 = 17,
	MDLMID_MDL_SZL2_Transaction300791 = 18,
	MDLMID_MDL_SZL2_Bulletin = 19,
	MDLMID_MDL_SZL2_Snapshot300111_v2 = 28,
	MDLMID_MDL_SZL2_Snapshot309011_v2 = 29,
	MDLMID_MDL_SZL2_Snapshot309111_v2 = 30,
	MDLMID_MDL_SZL2_Snapshot300611_v2 = 31,
	MDLMID_MDL_SZL2_Order300192_v2 = 33,
	MDLMID_MDL_SZL2_Order300592_v2 = 34,
	MDLMID_MDL_SZL2_Order300792_v2 = 35,
	MDLMID_MDL_SZL2_Transaction300191_v2 = 36,
	MDLMID_MDL_SZL2_Transaction300591_v2 = 37,
	MDLMID_MDL_SZL2_Transaction300791_v2 = 38
};

#pragma pack(1)

struct Trade {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Trade
	};
	uint32_t RecNo;
	uint32_t BuyOrderRecNo;
	uint32_t SellOrderRecNo;
	MDLAnsiString SecurityID;
	MDLTime TradTime;
	MDLDoubleT<3> Price;
	uint32_t TradeQty;
	MDLAnsiString OrderKind;
	MDLAnsiString FunctionCode;
	uint32_t SetNo;
};

struct Order {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Order
	};
	uint32_t RecNo;
	MDLAnsiString SecurityID;
	MDLTime OrderEntryTime;
	MDLDoubleT<3> Price;
	uint32_t OrderQty;
	MDLAnsiString OrderKind;
	MDLAnsiString FunctionCode;
	uint32_t SetNo;
};

struct Index {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Index
	};
	MDLAnsiString SecurityID;
	MDLDoubleT<4> OpenIndex;
	MDLDoubleT<3> Turnover;
	MDLDoubleT<4> HighIndex;
	MDLDoubleT<4> LowIndex;
	MDLDoubleT<4> LastIndex;
	MDLTime DataTimeStamp;
	int64_t NumTrades;
	int64_t TotalVolumeTraded;
	MDLDoubleT<4> CloseIndex;
	MDLAnsiString EndOfDayMaker;
};

struct MarketData {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_MarketData
	};
	MDLTime DataTimeStamp;
	MDLAnsiString SecurityID;
	MDLDoubleT<3> PreClosePx;
	MDLDoubleT<3> OpenPx;
	MDLDoubleT<3> HighPx;
	MDLDoubleT<3> LowPx;
	MDLDoubleT<3> LastPx;
	uint64_t NumTrades;
	uint64_t TotalVolumeTrade;
	MDLDoubleT<3> TotalValueTrade;
	uint64_t TotalLongPosition;
	MDLDoubleT<2> PERatio1;
	MDLDoubleT<2> PERatio2;
	MDLAnsiString EndOfDayMaker;
	uint64_t TotalOfferQty;
	MDLDoubleT<3> WeightedAvgOfferPx;
	struct OfferPriceLevelItem {
		MDLDoubleT<3> OfferPx;
		uint64_t OfferSize;
		uint32_t NumOrders;
		struct OrdersItem {
			uint32_t OrderQty;
		};
		MDLListT<OrdersItem> Orders;
	};
	MDLListT<OfferPriceLevelItem> OfferPriceLevel;
	uint64_t TotalBidQty;
	MDLDoubleT<3> WeightedAvgBidPx;
	struct BidPriceLevelItem {
		MDLDoubleT<3> BidPx;
		uint64_t BidSize;
		uint32_t NumOrders;
		struct OrdersItem {
			uint32_t OrderQty;
		};
		MDLListT<OrdersItem> Orders;
	};
	MDLListT<BidPriceLevelItem> BidPriceLevel;
};

struct StockStatus {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_StockStatus
	};
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityPreName;
	MDLAnsiString TradingPhaseCode;
	MDLAnsiString CrdBuyStatus;
	MDLAnsiString CrdSellStatus;
	MDLAnsiString SubScribeStatus;
	MDLAnsiString RedemptionStatus;
	MDLAnsiString WarrantCreated;
	MDLAnsiString WarrantDropped;
};

struct StockInfo {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_StockInfo
	};
	uint32_t RecNo;
	MDLAnsiString SecurityID;
	MDLUTF8String Symbol;
	MDLAnsiString SecurityDesc;
	MDLAnsiString UnderlyingSecurityID;
	MDLAnsiString SecurityIDSource;
	struct SecurityAltIDsItem {
		MDLAnsiString SecurityAltID;
		MDLAnsiString SecurityAltIDSource;
	};
	MDLListT<SecurityAltIDsItem> SecurityAltIDs;
	MDLAnsiString IndustryClassification;
	MDLAnsiString Currency;
	MDLDoubleT<3> ShareFaceValue;
	uint64_t OutstandingShare;
	uint64_t PublicFloatShareQuantity;
	MDLDoubleT<4> PreviousYearProfitPerShare;
	MDLDoubleT<4> CurrentYearProfitPerShare;
	MDLDoubleT<4> NAV;
	struct MiscFeesItem {
		MDLAnsiString MiscFeeType;
		uint32_t MiscFeeBasis;
		MDLDoubleT<6> MiscFeeAmt;
	};
	MDLListT<MiscFeesItem> MiscFees;
	MDLDate IssueDate;
	MDLAnsiString BondType;
	MDLDoubleT<6> CouponRate;
	MDLDoubleT<3> ConversionPrice;
	MDLAnsiString American_European;
	MDLAnsiString CallOrPut;
	MDLAnsiString WarrantClearingType;
	MDLDoubleT<4> CVRatio;
	MDLDate ConversionBeginDate;
	MDLDate ConversionEndDate;
	MDLDate InterestAccrualDate;
	MDLDate MaturityDate;
	uint32_t RoundLot;
	uint32_t BidLotSize;
	uint32_t AskLotSize;
	uint32_t MaxFloor;
	MDLAnsiString TradeMethod;
	MDLDoubleT<3> PriceTickSize;
	MDLAnsiString PriceLimitType;
	MDLDoubleT<3> AuctionPriceLimit;
	MDLDoubleT<3> ContinuousTradePriceLimit;
	MDLDoubleT<3> DailyPriceUpLimit;
	MDLDoubleT<3> DailyPriceLowLimit;
	MDLDoubleT<3> DailyPriceUpLimit2;
	MDLDoubleT<3> DailyPriceLowLimit2;
	MDLDoubleT<3> ContractMultiplier;
	MDLDoubleT<3> GageRate;
	MDLAnsiString CrdBuyUnderlying;
	MDLAnsiString CrdSellUnderlying;
	struct IndicesParticipatedsItem {
		MDLAnsiString participatingIndexID;
	};
	MDLListT<IndicesParticipatedsItem> IndicesParticipateds;
	MDLAnsiString MarketMakerFlag;
	MDLAnsiString SecurityExchange;
	MDLAnsiString CFICode;
	MDLAnsiString SecuritySubType;
	MDLAnsiString SecurityProperties;
	uint32_t SecurityTradingStatus;
	MDLAnsiString CorporateAction;
	MDLAnsiString TradingMechanism;
	MDLAnsiString CrdPriceCheckType;
	MDLAnsiString NetVotingFlag;
	MDLAnsiString ShrstrurefmFlag;
	MDLAnsiString OfferingFlag;
};

struct SysParam {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_SysParam
	};
	uint32_t StockNum;
	uint32_t IndexNum;
	uint32_t SetNum;
	MDLTime SysOpenTime;
	MDLTime SysCloseTime;
};

struct Snapshot300111 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Snapshot300111
	};
	MDLTime UpdateTime;
	uint32_t ChannelNo;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLAnsiString TradingPhaseCode;
	MDLDoubleT<3> PreCloPrice;
	int64_t TurnNum;
	int64_t Volume;
	MDLDoubleT<3> Turnover;
	MDLDoubleT<3> LastPrice;
	MDLDoubleT<3> OpenPrice;
	MDLDoubleT<3> HighPrice;
	MDLDoubleT<3> LowPrice;
	MDLDoubleT<3> DifPrice1;
	MDLDoubleT<3> DifPrice2;
	MDLDoubleT<3> PE1;
	MDLDoubleT<3> PE2;
	MDLDoubleT<3> PreCloseIOPV;
	MDLDoubleT<3> IOPV;
	int64_t TotalOfferQty;
	MDLDoubleT<3> WeightedAvgOfferPx;
	int64_t TotalBidQty;
	MDLDoubleT<3> WeightedAvgBidPx;
	MDLDoubleT<3> HighLimitPrice;
	MDLDoubleT<3> LowLimitPrice;
	int64_t OpenInt;
	MDLDoubleT<3> OptPremiumRatio;
	struct BidPriceLevelItem {
		int64_t Volume;
		MDLDoubleT<3> Price;
		uint32_t NumOrders;
		struct OrdersItem {
			int64_t OrderQty;
		};
		MDLListT<OrdersItem> Orders;
	};
	MDLListT<BidPriceLevelItem> BidPriceLevel;
	struct AskPriceLevelItem {
		int64_t Volume;
		MDLDoubleT<3> Price;
		uint32_t NumOrders;
		struct OrdersItem {
			int64_t OrderQty;
		};
		MDLListT<OrdersItem> Orders;
	};
	MDLListT<AskPriceLevelItem> AskPriceLevel;
};

struct Snapshot309011 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Snapshot309011
	};
	MDLTime UpdateTime;
	uint32_t ChannelNo;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLAnsiString TradingPhaseCode;
	MDLDoubleT<3> PreCloPrice;
	int64_t TurnNum;
	int64_t Volume;
	MDLDoubleT<3> Turnover;
	MDLDoubleT<3> LastIndex;
	MDLDoubleT<3> PreCloIndex;
	MDLDoubleT<3> OpenIndex;
	MDLDoubleT<3> HighIndex;
	MDLDoubleT<3> LowIndex;
};

struct Snapshot309111 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Snapshot309111
	};
	MDLTime UpdateTime;
	uint32_t ChannelNo;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLAnsiString TradingPhaseCode;
	MDLDoubleT<3> PreCloPrice;
	int64_t TurnNum;
	int64_t Volume;
	MDLDoubleT<3> Turnover;
	uint32_t StockNum;
};

struct Snapshot300611 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Snapshot300611
	};
	MDLTime UpdateTime;
	uint32_t ChannelNo;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLAnsiString TradingPhaseCode;
	MDLDoubleT<3> PreCloPrice;
	int64_t TurnNum;
	int64_t Volume;
	MDLDoubleT<3> Turnover;
	struct BidPriceLevelItem {
		int64_t Volume;
		MDLDoubleT<3> Price;
	};
	MDLListT<BidPriceLevelItem> BidPriceLevel;
	struct AskPriceLevelItem {
		int64_t Volume;
		MDLDoubleT<3> Price;
	};
	MDLListT<AskPriceLevelItem> AskPriceLevel;
};

struct SecurityStatus {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_SecurityStatus
	};
	MDLTime UpdateTime;
	uint32_t ChannelNo;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLAnsiString FinancialStatus;
	struct SwitchListItem {
		uint32_t SecuritySwitchType;
		uint32_t SecuritySwitchStatus;
	};
	MDLListT<SwitchListItem> SwitchList;
};

struct Order300192 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Order300192
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<3> Price;
	int64_t OrderQty;
	int32_t Side;
	MDLTime TransactTime;
	int32_t OrdType;
};

struct Order300592 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Order300592
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<3> Price;
	int64_t OrderQty;
	int32_t Side;
	MDLTime TransactTime;
	MDLAnsiString ConfirmID;
	MDLAnsiString Contactor;
	MDLAnsiString ContactInfo;
};

struct Order300792 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Order300792
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<3> Price;
	int64_t OrderQty;
	int32_t Side;
	MDLTime TransactTime;
	uint32_t ExpirationDays;
	uint32_t ExpirationType;
};

struct Transaction300191 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Transaction300191
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	int64_t BidApplSeqNum;
	int64_t OfferApplSeqNum;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<3> LastPx;
	int64_t LastQty;
	int32_t ExecType;
	MDLTime TransactTime;
};

struct Transaction300591 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Transaction300591
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	int64_t BidApplSeqNum;
	int64_t OfferApplSeqNum;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<3> LastPx;
	int64_t LastQty;
	int32_t ExecType;
	MDLTime TransactTime;
};

struct Transaction300791 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Transaction300791
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	int64_t BidApplSeqNum;
	int64_t OfferApplSeqNum;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<3> LastPx;
	int64_t LastQty;
	int32_t ExecType;
	MDLTime TransactTime;
};

struct Bulletin {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Bulletin
	};
	MDLTime OrigTime;
	uint32_t ChannelNo;
	MDLAnsiString NewsID;
	MDLUTF8String Headline;
	MDLAnsiString RawDataFormat;
	MDLUTF8String RawData;
};

struct Snapshot300111_v2 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Snapshot300111_v2
	};
	MDLTime UpdateTime;
	uint32_t ChannelNo;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLAnsiString TradingPhaseCode;
	MDLDoubleT<4> PreCloPrice;
	int64_t TurnNum;
	int64_t Volume;
	MDLDoubleT<4> Turnover;
	MDLDoubleT<6> LastPrice;
	MDLDoubleT<6> OpenPrice;
	MDLDoubleT<6> HighPrice;
	MDLDoubleT<6> LowPrice;
	MDLDoubleT<6> DifPrice1;
	MDLDoubleT<6> DifPrice2;
	MDLDoubleT<6> PE1;
	MDLDoubleT<6> PE2;
	MDLDoubleT<6> PreCloseIOPV;
	MDLDoubleT<6> IOPV;
	int64_t TotalOfferQty;
	MDLDoubleT<6> WeightedAvgOfferPx;
	int64_t TotalBidQty;
	MDLDoubleT<6> WeightedAvgBidPx;
	MDLDoubleT<6> HighLimitPrice;
	MDLDoubleT<6> LowLimitPrice;
	int64_t OpenInt;
	MDLDoubleT<6> OptPremiumRatio;
	struct BidPriceLevelItem {
		int64_t Volume;
		MDLDoubleT<6> Price;
		uint32_t NumOrders;
		struct OrdersItem {
			int64_t OrderQty;
		};
		MDLListT<OrdersItem> Orders;
	};
	MDLListT<BidPriceLevelItem> BidPriceLevel;
	struct AskPriceLevelItem {
		int64_t Volume;
		MDLDoubleT<6> Price;
		uint32_t NumOrders;
		struct OrdersItem {
			int64_t OrderQty;
		};
		MDLListT<OrdersItem> Orders;
	};
	MDLListT<AskPriceLevelItem> AskPriceLevel;
};

struct Snapshot309011_v2 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Snapshot309011_v2
	};
	MDLTime UpdateTime;
	uint32_t ChannelNo;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLAnsiString TradingPhaseCode;
	int64_t TurnNum;
	int64_t Volume;
	MDLDoubleT<4> Turnover;
	MDLDoubleT<6> LastIndex;
	MDLDoubleT<6> PreCloIndex;
	MDLDoubleT<6> OpenIndex;
	MDLDoubleT<6> HighIndex;
	MDLDoubleT<6> LowIndex;
};

struct Snapshot309111_v2 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Snapshot309111_v2
	};
	MDLTime UpdateTime;
	uint32_t ChannelNo;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLAnsiString TradingPhaseCode;
	MDLDoubleT<4> PreCloPrice;
	int64_t TurnNum;
	int64_t Volume;
	MDLDoubleT<4> Turnover;
	uint32_t StockNum;
};

struct Snapshot300611_v2 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Snapshot300611_v2
	};
	MDLTime UpdateTime;
	uint32_t ChannelNo;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLAnsiString TradingPhaseCode;
	MDLDoubleT<4> PreCloPrice;
	int64_t TurnNum;
	int64_t Volume;
	MDLDoubleT<4> Turnover;
	struct BidPriceLevelItem {
		int64_t Volume;
		MDLDoubleT<6> Price;
	};
	MDLListT<BidPriceLevelItem> BidPriceLevel;
	struct AskPriceLevelItem {
		int64_t Volume;
		MDLDoubleT<6> Price;
	};
	MDLListT<AskPriceLevelItem> AskPriceLevel;
};

struct Order300192_v2 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Order300192_v2
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<4> Price;
	int64_t OrderQty;
	int32_t Side;
	MDLTime TransactTime;
	int32_t OrdType;
};

struct Order300592_v2 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Order300592_v2
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<4> Price;
	int64_t OrderQty;
	int32_t Side;
	MDLTime TransactTime;
	MDLAnsiString ConfirmID;
	MDLAnsiString Contactor;
	MDLAnsiString ContactInfo;
};

struct Order300792_v2 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Order300792_v2
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<4> Price;
	int64_t OrderQty;
	int32_t Side;
	MDLTime TransactTime;
	uint32_t ExpirationDays;
	uint32_t ExpirationType;
};

struct Transaction300191_v2 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Transaction300191_v2
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	int64_t BidApplSeqNum;
	int64_t OfferApplSeqNum;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<4> LastPx;
	int64_t LastQty;
	int32_t ExecType;
	MDLTime TransactTime;
};

struct Transaction300591_v2 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Transaction300591_v2
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	int64_t BidApplSeqNum;
	int64_t OfferApplSeqNum;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<4> LastPx;
	int64_t LastQty;
	int32_t ExecType;
	MDLTime TransactTime;
};

struct Transaction300791_v2 {
	enum {
		ServiceID = MDLSID_MDL_SZL2,
		ServiceVer = MDLVID_MDL_SZL2,
		MessageID = MDLMID_MDL_SZL2_Transaction300791_v2
	};
	uint32_t ChannelNo;
	int64_t ApplSeqNum;
	MDLAnsiString MDStreamID;
	int64_t BidApplSeqNum;
	int64_t OfferApplSeqNum;
	MDLAnsiString SecurityID;
	MDLAnsiString SecurityIDSource;
	MDLDoubleT<4> LastPx;
	int64_t LastQty;
	int32_t ExecType;
	MDLTime TransactTime;
};

#pragma pack()

} // namespace mdl_szl2_msg
} // namespace mdl
} // namespace datayes
