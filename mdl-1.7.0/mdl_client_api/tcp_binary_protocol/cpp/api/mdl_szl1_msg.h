// Generated by the code_gen tool.  DO NOT EDIT!
// source: C:/SVN/project/mdl/src/resource/mdl_szl1_msg.xml
// time: 2015/07/04 15:32:56

#pragma once

#include "mdl_api_types.h"

namespace datayes {
namespace mdl {
namespace mdl_szl1_msg {

static const uint16_t MDLVID_MDL_SZL1 = 101;

enum MDL_SZL1MessageID {
	MDLMID_MDL_SZL1_SZL1Index = 1,
	MDLMID_MDL_SZL1_SZL1Stock = 2
};

#pragma pack(1)

struct SZL1Index {
	enum {
		ServiceID = MDLSID_MDL_SZL1,
		ServiceVer = MDLVID_MDL_SZL1,
		MessageID = MDLMID_MDL_SZL1_SZL1Index
	};
	MDLAnsiString IndexID;
	MDLUTF8String IndexName;
	MDLDoubleT<3> PreCloseIndex;
	MDLDoubleT<3> OpenIndex;
	MDLDoubleT<3> HighIndex;
	MDLDoubleT<3> LowIndex;
	MDLDoubleT<3> LastIndex;
	MDLDoubleT<3> TradVolume;
	MDLDoubleT<3> Turnover;
	MDLTime UpdateTime;
};

struct SZL1Stock {
	enum {
		ServiceID = MDLSID_MDL_SZL1,
		ServiceVer = MDLVID_MDL_SZL1,
		MessageID = MDLMID_MDL_SZL1_SZL1Stock
	};
	MDLAnsiString SecurityID;
	MDLUTF8String SecurityName;
	MDLFloatT<3> PreCloPrice;
	MDLFloatT<3> OpenPrice;
	MDLDoubleT<3> Turnover;
	uint32_t TurnNum;
	MDLFloatT<3> HighPrice;
	MDLFloatT<3> LowPrice;
	MDLFloatT<3> LastPrice;
	MDLFloatT<3> PE1;
	MDLFloatT<3> PE2;
	MDLFloatT<3> AskPrice5;
	uint64_t AskVolume5;
	MDLFloatT<3> AskPrice4;
	uint64_t AskVolume4;
	MDLFloatT<3> AskPrice3;
	uint64_t AskVolume3;
	MDLFloatT<3> AskPrice2;
	uint64_t AskVolume2;
	MDLFloatT<3> AskPrice1;
	uint64_t AskVolume1;
	MDLFloatT<3> BidPrice1;
	uint64_t BidVolume1;
	MDLFloatT<3> BidPrice2;
	uint64_t BidVolume2;
	MDLFloatT<3> BidPrice3;
	uint64_t BidVolume3;
	MDLFloatT<3> BidPrice4;
	uint64_t BidVolume4;
	MDLFloatT<3> BidPrice5;
	uint64_t BidVolume5;
	MDLTime UpdateTime;
	MDLFloatT<3> DifPrice1;
	MDLFloatT<3> DifPrice2;
	uint64_t OpenInt;
	uint64_t Volume;
	uint32_t DeletionIndicator;
};

#pragma pack()

} // namespace mdl_szl1_msg
} // namespace mdl
} // namespace datayes
